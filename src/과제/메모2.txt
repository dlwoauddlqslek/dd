String ateTime = rs.getString( "ateTime" ); System.out.println( ateTime );


                

                LocalDate now = LocalDate.now();
                LocalDate ateDate = LocalDate.of(
                        Integer.parseInt( ateTime.substring( 0 , 4 ) ) ,
                        Integer.parseInt(ateTime.substring( 5, 7 ) ),
                                Integer.parseInt(ateTime.substring( 8 , 10 ) ));
                
                System.out.println(" now  = " +  now );
                System.out.println("ateDate = " + ateDate);
                System.out.println("ateDate.compareTo( now ) = " + ateDate.compareTo( now ));

                if (ateDate.compareTo(now)==0)


select foodCode
	from member inner join atefoodrecord 
    on member.memberCode = atefoodrecord.memberCode 
    where member.memberCode = ? and DATE_FORMAT( atefoodrecord.ateTime ,'%Y-%m-%d' ) = DATE_FORMAT( now() ,'%Y-%m-%d' ) ;

// 로그인한 회원이 먹은 음식들 칼로리 합
//    public int kcalTotal( int loginMno ){
//
//        int total = 0;
//         try{
//            String sql="select foodCode , ateTime from member inner join atefoodrecord on member.memberCode = atefoodrecord.memberCode where member.memberCode = ?;";
//            ps=conn.prepareStatement(sql);
//            ps.setInt( 1 , loginMno );
//            rs=ps.executeQuery();
//            while (rs.next()){
//                int foodCode = rs.getInt( "foodCode" ); System.out.println( foodCode );
//                String ateTime = rs.getString( "ateTime" ); System.out.println( ateTime );
//
//
//
//
//                LocalDate now = LocalDate.now();
//                LocalDate ateDate = LocalDate.of(
//                        Integer.parseInt( ateTime.substring( 0 , 4 ) ) ,
//                        Integer.parseInt(ateTime.substring( 5, 7 ) ),
//                                Integer.parseInt(ateTime.substring( 8 , 10 ) ));
//
//                System.out.println(" now  = " +  now );
//                System.out.println("ateDate = " + ateDate);
//                System.out.println("ateDate.compareTo( now ) = " + ateDate.compareTo( now ));
//
//                if (ateDate.compareTo(now)==0) {
//
//
//                    String sql2 = "select foodKcal from food where foodCode = ?; ";
//
//                    ps = conn.prepareStatement(sql2);
//                    ps.setInt(1, foodCode);
//                    ResultSet rs2 = ps.executeQuery();
//                    if (rs2.next()) {
//                        total += rs2.getInt("foodKcal");
//                    }
//                }
//            }
//        }catch (Exception e){System.out.println(e);}
//        return total;
    //}