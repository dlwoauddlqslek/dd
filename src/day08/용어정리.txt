-타입이란?
변수나 메서드 매개변수, 메서드 반환 값 등이 어떤 종류의 데이터인지 정의한다.

-타입을 언제 사용 해야 되는지?
변수 선언이나 메서드 매개변수와 반환값 정의, 클래스 멤버변수 정의, 참조자료형 오류 방지

- 클래스란?
여러 개의 객체를 생성할 수 있는 설계 도면, 클래스는 멤버변수와 메서드로 이루어져있다

-클래스는 언제 사용하는가?
객체를 생성할 때 쓰인다. 코드의 구조화, 재사용, 유지보수의 편리성을 위해 사용한다.

-객체란?
현실에서 행위를 하는 대상. 현실 세계의 개념을 프로그래밍 언어의 형태로 표현하는것

-객체를 언제 사용
객체안의 데이터와 해당 데이터를 처리하는 메소드를 하나의 단위로 묶어 관리할 때, 데이터 보호, 
코드의 구조화, 재사용, 유지보수의 편리성을 위해 사용한다.

-멤버변수?
클래스 내부에 선언된 변수이다. 이 변수들은 클래스의 일부로써 객체의 상태(속성)를 나타낸다.

-멤버변수 언제사용
객체의 상태 저장, 객체 간 데이터 공유할 때

-생성자란?
객체를 생성할 대 호출되어 객체의 초기화를 담당한다. 클래스 이름과 동일

-생성자 언제 사용
객체 초기화, 다양한 초기화 방법을 위해 오버로딩(매개변수 타입,개수,순서) 사용한다

-메소드/함수란?
클래스의 객체가 수행하는 기능을 정의

-메소드/함수 언제 사용?
코드의 구조화와 모듈화, 매개변수와 반환값을 활용한 데이터 처리, 상호작용/협력을 위해

-매개변수란?
메소드를 호출할 때 메소드에 전달하는 데이터를 받아들이는 변수입니다.

-매개변수 언제 사용?
오버로딩을 위해 사용, 메소드를 호출할 때, 메소드에 필요한 데이터를 전달하기 위해 매개변수를 사용한다.

-반환타입이란?
메소드가 실행을 완료하고 반환하는 데이터의 타입, 타입이 없는 경우 void 사용

-반환/리턴 이란?
메소드가 실행을 완료한 후 호출자(메소드 호출하는 코드 또는 객체)에게 전달하는 값

-반환/리턴 언제 사용?
호출자가 반환값이 필요할 때 사용, 조건에 따라 다른 값 반환, 객체 생성 후 반환, void 반환 타입을 가진 경우 조기 종료










